/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it19014500;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.table.TableModel;
/**
 *
 * @author it19014500
 */
public class ViewWorkingDetail extends javax.swing.JFrame {

    /**
     * Creates new form ViewWorkingDetail
     */
    Integer tot;
    String mon="No MonDay";
    String tue="No TuesDay";
    String wen="No WednesDay";
    String thirs="No ThursDay";
    String fri="No FriDay";
    String sat="No SaturDay";
    String sun="No SunDay";
    
    public ViewWorkingDetail() {
        initComponents();
        show_user();
        
    }

    public ArrayList<User> userList(){
        ArrayList<User> userList = new ArrayList<>();
        try{
            
            //Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            //String url = "jdbc:sqlserver://localhost:1433;databaseName=jayamadhuka;user=sa;password=root";
            //Connection conn = DriverManager.getConnection(url);
            //Apache Connection
            Connection k = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
            String wdr = "Select * from workingdayshours";
            Statement st = k.createStatement();
            ResultSet rs = st.executeQuery(wdr);
            
            User user;
            while(rs.next()){
                user = new User(rs.getInt("id"),rs.getString("monDay"),rs.getString("tuesDay"),rs.getString("wednesDay"),rs.getString("thursDay"),rs.getString("friDay"),rs.getString("saturDay"),rs.getString("sunDay"),rs.getString("hours"),rs.getString("minuits"),rs.getInt("totDay"),rs.getString("week"),rs.getString("month"));
                userList.add(user);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        return userList;
    }
    
    public void show_user(){
        ArrayList<User> list = userList();
        DefaultTableModel model = (DefaultTableModel)workingDays_Detai_Tablel.getModel();
        Object[] row = new Object[13];
        for(int i =0; i<list.size(); i++){
            row[0] = list.get(i).getid();
            row[1] = list.get(i).getmonD();
            row[2] = list.get(i).gettueD();
            row[3] = list.get(i).getwednesD();
            row[4] = list.get(i).getthurD();
            row[5] = list.get(i).getfriD();
            row[6] = list.get(i).getsatD();
            row[7] = list.get(i).getsunD();
            row[8] = list.get(i).gethour();
            row[9] = list.get(i).getmin();
            row[10] = list.get(i).gettot();
            row[11] = list.get(i).getwee();
            row[12] = list.get(i).getmont();
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workingDays_Detai_Tablel = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        addWd2 = new javax.swing.JComboBox<>();
        addMonday2 = new javax.swing.JCheckBox();
        addTuesday2 = new javax.swing.JCheckBox();
        addWednesday2 = new javax.swing.JCheckBox();
        addFriday2 = new javax.swing.JCheckBox();
        addThursday2 = new javax.swing.JCheckBox();
        addSunday2 = new javax.swing.JCheckBox();
        addSaturday2 = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        addMonth2 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        addWeek2 = new javax.swing.JComboBox<>();
        addHours2 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        addMinutes2 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        searchData = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        errorNotation = new javax.swing.JLabel();
        matchingLable = new javax.swing.JLabel();
        idv = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(247, 250, 222));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(3, 48, 118));
        jLabel1.setText("WORKING DAYS AND HOURS VIEW");

        jPanel2.setBackground(new java.awt.Color(212, 233, 221));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 78, 99));
        jLabel2.setText("DETAILS VIEW");

        jButton1.setBackground(new java.awt.Color(28, 72, 188));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("REFRESH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        workingDays_Detai_Tablel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY", "HOURES", "MINUITES", "TOTDAY", "MONTH", "WEEK"
            }
        ));
        workingDays_Detai_Tablel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                workingDays_Detai_TablelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(workingDays_Detai_Tablel);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 78, 99));
        jLabel3.setText("Number of Working Days");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 78, 99));
        jLabel4.setText("Working Days");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 78, 99));
        jLabel5.setText("Working Time Per Day");

        addWd2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07" }));
        addWd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWd2ActionPerformed(evt);
            }
        });

        addMonday2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        addMonday2.setText("Monday");

        addTuesday2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        addTuesday2.setText("Tuesday");
        addTuesday2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTuesday2ActionPerformed(evt);
            }
        });

        addWednesday2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        addWednesday2.setText("Wednesday");
        addWednesday2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWednesday2ActionPerformed(evt);
            }
        });

        addFriday2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        addFriday2.setText("Friday");

        addThursday2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        addThursday2.setText("Thursday");
        addThursday2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addThursday2ActionPerformed(evt);
            }
        });

        addSunday2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        addSunday2.setText("Sunday");
        addSunday2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSunday2ActionPerformed(evt);
            }
        });

        addSaturday2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        addSaturday2.setText("Saturday");
        addSaturday2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSaturday2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 78, 99));
        jLabel6.setText("Month");

        addMonth2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        addMonth2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMonth2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 78, 99));
        jLabel7.setText("Week");

        addWeek2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05" }));

        addHours2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Hours");

        addMinutes2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "05", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55" }));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("Minutes");

        jButton2.setBackground(new java.awt.Color(28, 72, 188));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("UPDATE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        deletebtn.setBackground(new java.awt.Color(182, 4, 45));
        deletebtn.setForeground(new java.awt.Color(255, 255, 255));
        deletebtn.setText("DELETE");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(138, 135, 135));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("BACK");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(75, 155, 153));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("RESET");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        searchData.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        searchData.setForeground(new java.awt.Color(102, 102, 102));
        searchData.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchDataFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchDataFocusLost(evt);
            }
        });
        searchData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDataActionPerformed(evt);
            }
        });

        searchBtn.setText("SEARCH");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        errorNotation.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        errorNotation.setForeground(new java.awt.Color(153, 0, 0));

        matchingLable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        matchingLable.setForeground(new java.awt.Color(0, 0, 153));

        idv.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        idv.setText("ID");

        jToggleButton1.setText("Dash Board");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(262, 262, 262)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jButton2)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addGap(44, 44, 44)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(addMonday2)
                                            .addComponent(addHours2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(addWd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                                        .addComponent(jLabel6)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(addMonth2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel7))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                        .addComponent(addTuesday2)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(addWednesday2)))
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                                        .addGap(38, 38, 38)
                                                        .addComponent(addWeek2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(178, 178, 178))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(deletebtn)
                                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addComponent(addThursday2)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(addFriday2)))
                                                        .addGap(18, 18, 18)
                                                        .addComponent(addSaturday2)))
                                                .addGap(18, 18, 18)
                                                .addComponent(addSunday2))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(57, 57, 57)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                                        .addComponent(addMinutes2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(27, 27, 27)
                                                        .addComponent(jLabel9))
                                                    .addComponent(jButton3)))))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 848, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(idv)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(errorNotation)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(searchData, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(searchBtn))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addGap(356, 356, 356)
                                                .addComponent(jLabel2)
                                                .addGap(315, 315, 315)))))))
                        .addGap(0, 19, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(matchingLable, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(184, 184, 184)
                                .addComponent(jToggleButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(matchingLable)
                            .addComponent(errorNotation)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jToggleButton1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idv, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(searchData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addWd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(addMonth2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(addWeek2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(addMonday2)
                    .addComponent(addTuesday2)
                    .addComponent(addWednesday2)
                    .addComponent(addFriday2)
                    .addComponent(addThursday2)
                    .addComponent(addSunday2)
                    .addComponent(addSaturday2))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(addHours2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(addMinutes2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(deletebtn)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(249, 249, 249))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addWd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWd2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addWd2ActionPerformed

    private void addWednesday2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWednesday2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addWednesday2ActionPerformed

    private void addThursday2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addThursday2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addThursday2ActionPerformed

    private void addMonth2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMonth2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addMonth2ActionPerformed

    private void addTuesday2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTuesday2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addTuesday2ActionPerformed

    private void addSunday2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSunday2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addSunday2ActionPerformed

    private void addSaturday2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSaturday2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addSaturday2ActionPerformed

    //Code for Close Event
    public void close(){
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Back Button:
        if(evt.getActionCommand().equals("BACK")){
            System.out.println("Back to Add Page");
        }
        close();
        AddWorkingDetail wdb = new AddWorkingDetail();
        wdb.setVisible(true);
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Update Button:
               
        try{
            
            
            //Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            //String url = "jdbc:sqlserver://localhost:1433;databaseName=jayamadhuka;user=sa;password=root";
            //Connection conn = DriverManager.getConnection(url);
            //apache connection
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
            int row = workingDays_Detai_Tablel.getSelectedRow();
            String value = (workingDays_Detai_Tablel.getModel().getValueAt(row, 0).toString());
            String wdu = "Update workingdayshours SET monDay=?,tuesDay=?,wednesDay=?,thursDay=?,friDay=?,saturDay=?,sunDay=?,hours=?,minuits=?,totDay=?,week=?,month=? where id="+value;
            
            PreparedStatement pstmt = c.prepareStatement(wdu);

            
            String days1 = "No";
            String days2 = "No";
            String days3 = "No";
            String days4 = "No";
            String days5 = "No";
            String days6 = "No";
            String days7 = "No";
            String hours = "";
            String minuts = "";
            String week = "";
            String month = "";
  
            tot = 0;
                       
                    
            if(addMonday2.isSelected()){
                days1 = "Working";
                tot+=1;
                mon = "MonDay";
                //wename kotasa
                
//                Connection mn7 = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                String iquery7 = "select * from days";
//                      Statement st7 = mn7.createStatement();
//                      
//                       ResultSet rs7 = st7.executeQuery(iquery7);
//                       while(rs7.next()){
//                           String ddid1 = rs7.getString("did");
//                           String daym1 =rs7.getString("workingDay");
//                           if((daym1=="MonDay")||(daym1=="No MonDay")){
//                               String catchd1 = ddid1;
//                                Connection bl = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                                String wdu2 = "Update days SET workingDay=? where did=?"; 
//                                
//                                PreparedStatement pstmtu = bl.prepareStatement(wdu2);
////                                mon="MonDay";
//                                pstmtu.setString(1, mon);
//                                pstmtu.setInt(2, Integer.valueOf(catchd1));
//                          
//                                pstmtu.executeUpdate();
//                               
//                           }
//                       }
               
//            }else if(!(addMonday2.isSelected())){
                
//                Connection mn7 = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                String iquery7 = "select * from days";
//                Statement st7 = mn7.createStatement();
//                      
//                ResultSet rs7 = st7.executeQuery(iquery7);
//                       while(rs7.next()){
//                           String ddid1 = rs7.getString("did");
//                           String daym1 =rs7.getString("workingDay");
//                           if((daym1=="MonDay")||(daym1=="No MonDay")){
//                               String catchd1 = ddid1;
//                                Connection bl = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                                String wdu2 = "Update days SET workingDay=? where did=?"; 
//                                
//                                PreparedStatement pstmtu = bl.prepareStatement(wdu2);
////                                mon="MonDay";
//                                pstmtu.setString(1, mon);
//                                pstmtu.setInt(2, Integer.valueOf(catchd1));
//                          
//                                pstmtu.executeUpdate();
//                               
//                                break;

                                //second Option
                                //inserting part
//                                Connection d = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                                String wdt ="insert into days(workingDay,idwd)values(?,?)";
//                                PreparedStatement pstm = d.prepareStatement(wdt);
//                                String da2="No MonDay";
//                                pstm.setString(1, da2);
//                                pstm.setInt(2, Integer.valueOf(IdentifyKey.getText()));
//                                pstm.executeUpdate();

                                  
//                           }
//                       }
            }
            if(addTuesday2.isSelected()){
                days2 = "Working";
                tot+=1;
                tue =  "TuesDay";
                //wenama kotasa
                
//                Connection mn6 = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                String iquery6 = "select * from days";
//                      Statement st6 = mn6.createStatement();
//                      
//                      ResultSet rs6 = st6.executeQuery(iquery6);
//                      while(rs6.next()){
//                           String did1n2 = rs6.getString("did");
//                           String daym2 =rs6.getString("workingDay");
//                           if((daym2=="TuesDay")||(daym2=="No TuesDay")){
//                               String catchd2 = did1n2;
//                                Connection bl2 = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                                String wdu22 = "Update days SET workingDay=? where did='"+Integer.valueOf(catchd2)+"'";
//                                
//                                PreparedStatement pstmtu = bl2.prepareStatement(wdu22);
////                                tue="TuesDay";
//                                pstmtu.setString(1, tue);
//
//                                pstmtu.executeUpdate();
//                               break;
//                               
//                           }
//                      }            
            }
            if(addWednesday2.isSelected()){
                days3 = "Working";
                tot+=1;
                wen = "WednesDay";
                //wenama kotasa
                
//                Connection mn5 = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                String iquery5 = "select * from days";
//                      Statement st5 = mn5.createStatement();
//                      
//                      ResultSet rs5 = st5.executeQuery(iquery5);
//                      while(rs5.next()){
//                           String did33 = rs5.getString("did");
//                           String daym3 =rs5.getString("workingDay");
//                           if((daym3=="WednesDay")||(daym3=="No WednesDay")){
//                              String catchd3 = did33;
//
//                               Connection bl3 = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                               String wdu23 = "Update days SET workingDay=? where did='"+Integer.valueOf(catchd3)+"'";
//
//                                PreparedStatement pstmtu = bl3.prepareStatement(wdu23);
////                                wen ="WednesDay";
//                                pstmtu.setString(1, wen);
//                                
//                                pstmtu.executeUpdate();
//                              break;
//                           }
//                      }                    
            }
            if(addThursday2.isSelected()){
                days4 = "Working";
                tot+=1;
                thirs = "ThursDay";
                //wenama kotasa
                
//                Connection mn4 = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                String iquery4 = "select * from days";
//                      Statement st4 = mn4.createStatement();
//                      
//                      ResultSet rs4 = st4.executeQuery(iquery4);
//                      while(rs4.next()){
//                           String did4 = rs4.getString("did");
//                           String daym4 =rs4.getString("workingDay");
//                           if((daym4=="ThursDay")||(daym4=="No ThursDay")){
//                               String catchd4 = did4;
//                               Connection bl4 = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//
//                                String wdu24 = "Update days SET workingDay=? where did='"+Integer.valueOf(catchd4)+"'";
//                                PreparedStatement pstmtu = bl4.prepareStatement(wdu24);
////                                thirs ="ThursDay";
//                                pstmtu.setString(1, thirs);
//                                
//                                pstmtu.executeUpdate();
//                               break;
//                           }
//                      }   
            }
            if(addFriday2.isSelected()){
                days5 = "Working";
                tot+=1;
                fri = "FriDay";
                //wenama kotasa
                
//                Connection mn3 = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                String iquery3 = "select * from days";
//                      Statement st3 = mn3.createStatement();
//                      
//                      ResultSet rs3 = st3.executeQuery(iquery3);
//                      while(rs3.next()){
//                           String did5 = rs3.getString("did");
//                           String daym5 =rs3.getString("workingDay");
//                           if((daym5=="FriDay")||(daym5=="No FriDay")){
//                               String catchd5 = did5;
//                               Connection bl5 = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//
//                                String wdu25 = "Update days SET workingDay=? where did='"+Integer.valueOf(catchd5)+"'";
//                                PreparedStatement pstmtu = bl5.prepareStatement(wdu25);
////                                fri ="FriDay";
//                                pstmtu.setString(1, fri);
//                                
//                                pstmtu.executeUpdate();
//                               break;
//                           }
//                      } 
            }
            if(addSaturday2.isSelected()){
                days6 = "Working";
                tot+=1;
                sat = "SaturDay";
                //wenama kotasa
                
//                Connection mn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                String iquery2 = "select * from days";
//                      Statement st2 = mn1.createStatement();
//                      
//                      ResultSet rs2 = st2.executeQuery(iquery2);
//                      while(rs2.next()){
//                           String did6 = rs2.getString("did");
//                           String daym6 =rs2.getString("workingDay");
//                           if((daym6=="SaturDay")||(daym6=="No SaturDay")){
//                               String catchd6 = did6;
//                               Connection bl6 = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//
//                                String wdu26 = "Update days SET workingDay=? where did='"+Integer.valueOf(catchd6)+"'";
//                                PreparedStatement pstmtu = bl6.prepareStatement(wdu26);
////                                sat ="SaturDay";
//                                pstmtu.setString(1, sat);
//                                
//                                pstmtu.executeUpdate();
//                               break;
//                           }
//                      } 
            }
            if(addSunday2.isSelected()){
                days7 = "Working";
                tot+=1;
                sun = "SunDay";
                //wenama kotasa
                
//                Connection mn = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                String iquery = "select * from days";
//                      Statement st = mn.createStatement();
//                      
//                      ResultSet rs1 = st.executeQuery(iquery);
//                      while(rs1.next()){
//                           String did7 = rs1.getString("did");
//                           String daym7 =rs1.getString("workingDay");
//                           if((daym7=="SunDay")||(daym7=="No SaturDay")){
//                               String catchd7 = did7;
//                               Connection bl7 = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                                String wdu27 = "Update days SET workingDay=? where did='"+Integer.valueOf(catchd7)+"'";
//                                PreparedStatement pstmtu = bl7.prepareStatement(wdu27);
////                                sun ="SunDay";
//                                pstmtu.setString(1, sun);
//                                pstmtu.executeUpdate();
//                               
//                           }
//                      }    
            }
            
                
                pstmt.setString(1, days1);
                pstmt.setString(2, days2);
                pstmt.setString(3, days3);
                pstmt.setString(4, days4);
                pstmt.setString(5, days5);
                pstmt.setString(6, days6);
                pstmt.setString(7, days7);
                
                
                
                if(days1=="Working"){
                     try{
           
                    
                        Connection d = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                        String wdt ="insert into days(workingDay,idwd)values(?,?)";
                        String wdt = "Update days SET workingDay=? where idwd=? AND workingDay = 'MonDay' OR workingDay = 'No MonDay'";
                        PreparedStatement pstm = d.prepareStatement(wdt);
                        String da7="MonDay";
                        pstm.setString(1, da7);
                        pstm.setInt(2, Integer.valueOf(value));
                        pstm.executeUpdate();

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    } 
                }

                //Deletion Days
                if(!(days1=="Working")){
                     try{
           
                    
                        Connection d = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                        String wdt = "Update days SET workingDay=? where idwd=?";
                        String wdt = "Update days SET workingDay=? where idwd=? AND workingDay = 'MonDay' OR workingDay = 'No MonDay'";
                        PreparedStatement pstm = d.prepareStatement(wdt);
                        String da7="No MonDay";
                        pstm.setString(1, da7);
                        pstm.setInt(2, Integer.valueOf(value));
                        pstm.executeUpdate();


                    

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    } 
                }
//           

                if(days2=="Working"){
                    try{
           
                    
                        Connection d = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                        String wdt ="insert into days(workingDay,idwd)values(?,?)";
                        String wdt = "Update days SET workingDay=? where idwd=? AND workingDay = 'TuesDay' OR workingDay = 'No TuesDay'";
                        PreparedStatement pstm = d.prepareStatement(wdt);
                        String da2="TuesDay";
                        pstm.setString(1, da2);
                        pstm.setInt(2, Integer.valueOf(value));
                        pstm.executeUpdate();


                    

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    } 
                }

                //Deletion Days
                if(!(days2=="Working")){
                     try{
           
                    
                    Connection d = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                        String wdt ="insert into days(workingDay,idwd)values(?,?)";
                        String wdt = "Update days SET workingDay=? where idwd=? AND workingDay = 'TuesDay' OR workingDay = 'No TuesDay'";
                        PreparedStatement pstm = d.prepareStatement(wdt);
                        String da2="No TuesDay";
                        pstm.setString(1, da2);
                        pstm.setInt(2, Integer.valueOf(value));
                        pstm.executeUpdate();


                    

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    } 
                }
// 
                if(days3=="Working"){
                    try{
           
                        Connection d = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                        String wdt ="insert into days(workingDay,idwd)values(?,?)";
                        String dqery = "Update days SET workingDay=? where idwd=? AND workingDay = 'WednesDay' OR workingDay = 'No WednesDay'";
                        PreparedStatement pstm = d.prepareStatement(dqery);
                        String da3="WednesDay";
                        pstm.setString(1, da3);
                        pstm.setInt(2, Integer.valueOf(value));
                        pstm.executeUpdate();

                    

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    } 
                }


                //Deletion Days
                if(!(days3=="Working")){
                     try{
           
                   
                   Connection d = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                        String wdt ="insert into days(workingDay,idwd)values(?,?)";
                        String dqery = "Update days SET workingDay=? where idwd=? AND workingDay = 'WednesDay' OR workingDay = 'No WednesDay'";
                        PreparedStatement pstm = d.prepareStatement(dqery);
                        String da3="No WednesDay";
                        pstm.setString(1, da3);
                        pstm.setInt(2, Integer.valueOf(value));
                        pstm.executeUpdate();


                    

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    } 
                }
// 

                if(days4=="Working"){
                    try{
           

                        Connection d = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                        String wdt ="insert into days(workingDay,idwd)values(?,?)";
                        String dqery = "Update days SET workingDay=? where idwd=? AND workingDay = 'ThursDay' OR workingDay = 'No ThursDay'";
                        PreparedStatement pstm = d.prepareStatement(dqery);
                        String da4="ThursDay";
                        pstm.setString(1, da4);
                        pstm.setInt(2, Integer.valueOf(value));
                        pstm.executeUpdate();   

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    } 
                }
                
                //Deletion Days
                if(!(days4=="Working")){
                     try{
           
                    
                        Connection d = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
                        String dqery = "Update days SET workingDay=? where idwd=? AND workingDay = 'ThursDay' OR workingDay = 'No ThursDay'";
                        PreparedStatement pstm = d.prepareStatement(dqery);
                        String da4="No ThursDay";
                        pstm.setString(1, da4);
                        pstm.setInt(2, Integer.valueOf(value));
                        pstm.executeUpdate();
                    

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    } 
                }
//   
                //Deletion Days
                if(days5=="Working"){
                    try{
           
                        Connection d = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
                        String dqery = "Update days SET workingDay=? where idwd=? AND workingDay = 'FriDay' OR workingDay = 'No FriDay'";
                        PreparedStatement pstm = d.prepareStatement(dqery);
                        String da5="FriDay";
                        pstm.setString(1, da5);
                        pstm.setInt(2, Integer.valueOf(value));
                        pstm.executeUpdate();

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    } 
                }

                //Deletion Days
                if(!(days5=="Working")){
                     try{
           
                    
                        Connection d = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
                        String dqery = "Update days SET workingDay=? where idwd=? AND workingDay = 'FriDay' OR workingDay = 'No FriDay'";
                        PreparedStatement pstm = d.prepareStatement(dqery);
                        String da5="No FriDay";
                        pstm.setString(1, da5);
                        pstm.setInt(2, Integer.valueOf(value));
                        pstm.executeUpdate();

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    } 
                }
//               
                if(days6=="Working"){
                    try{
           
                        Connection d = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                        String wdt ="insert into days(workingDay,idwd)values(?,?)";
                        String dqery = "Update days SET workingDay=? where idwd=? AND workingDay = 'SaturDay' OR workingDay = 'No SaturDay'";
                        PreparedStatement pstm = d.prepareStatement(dqery);
                        String da6="SaturDay";
                        pstm.setString(1, da6);
                        pstm.setInt(2, Integer.valueOf(value));
                        pstm.executeUpdate();

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    } 
                }
                //Deletion Days
                if(!(days6=="Working")){
                     try{
           
                        Connection d = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
//                        String wdt ="insert into days(workingDay,idwd)values(?,?)";
                        String dqery = "Update days SET workingDay=? where idwd=? AND workingDay = 'SaturDay' OR workingDay = 'No SaturDay'";
                        PreparedStatement pstm = d.prepareStatement(dqery);
                        String da6="No SaturDay";
                        pstm.setString(1, da6);
                        pstm.setInt(2, Integer.valueOf(value));
                        pstm.executeUpdate();

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    } 
                }
//   
                
                if(days7=="Working"){
                    try{
           
                        Connection d = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
                        String dqery = "Update days SET workingDay=? where idwd=? AND workingDay = 'SunDay' OR workingDay = 'No SunDay'";
                        PreparedStatement pstm = d.prepareStatement(dqery);
                        String da7="SunDay";
                        pstm.setString(1, da7);
                        pstm.setInt(2, Integer.valueOf(value));
                        pstm.executeUpdate();

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    } 
                }
                //Deletion Days
                if(!(days7=="Working")){
                     try{
           
                    
                        Connection d = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
                        String dqery = "Update days SET workingDay=? where idwd=? AND workingDay = 'SunDay' OR workingDay = 'No SunDay'";
                        PreparedStatement pstm = d.prepareStatement(dqery);
                        String da7="No SunDay";
                        pstm.setString(1, da7);
                        pstm.setInt(2, Integer.valueOf(value));
                        pstm.executeUpdate();

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    } 
                }


                hours = addHours2.getSelectedItem().toString();
                pstmt.setString(8, hours);

                minuts = addMinutes2.getSelectedItem().toString();
                pstmt.setString(9, minuts);

                
                
                addWd2.setSelectedIndex(tot);
                pstmt.setInt(10, tot);
                if(tot== addWd2.getSelectedIndex()){
                    matchingLable.setText("Well Done!");
                }else{
                    matchingLable.setText("System got Calculation of Selected Days!");
                }

                week = addWeek2.getSelectedItem().toString();
                pstmt.setString(11, week);

                month = addMonth2.getSelectedItem().toString();
                pstmt.setString(12, month);
                pstmt.executeUpdate();
                
                DefaultTableModel model = (DefaultTableModel)workingDays_Detai_Tablel.getModel();
                model.setRowCount(0);
                show_user();
                JOptionPane.showMessageDialog(null, "Updated Successfully!");
                
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void workingDays_Detai_TablelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_workingDays_Detai_TablelMouseClicked
        // Mouse Clicked Option:
        int i = workingDays_Detai_Tablel.getSelectedRow();
        TableModel model = workingDays_Detai_Tablel.getModel();
        
        String idl = model.getValueAt(i, 0).toString();
        idv.setText(idl);
        //days selection
        String day1u = model.getValueAt(i, 1).toString();
        switch(day1u){
            case "Working":
                addMonday2.setSelected(true);
                break;
            case "No":
                addMonday2.setSelected(false);
                break;
        }     
        String day2u = model.getValueAt(i, 2).toString();
        switch(day2u){
            case "Working":
                addTuesday2.setSelected(true);
                break;
            case "No":
                addTuesday2.setSelected(false);
                break;
        }    
        String day3u = model.getValueAt(i, 3).toString();
        switch(day3u){
            case "Working":
                addWednesday2.setSelected(true);
                break;
            case "No":
                addWednesday2.setSelected(false);
                break;
        }    
        String day4u = model.getValueAt(i, 4).toString();
        switch(day4u){
            case "Working":
                addThursday2.setSelected(true);
                break;
            case "No":
                addThursday2.setSelected(false);
                break;
        }   
        String day5u = model.getValueAt(i, 5).toString();
        switch(day5u){
            case "Working":
                addFriday2.setSelected(true);
                break;
            case "No":
                addFriday2.setSelected(false);
                break;
        }        
        String day6u = model.getValueAt(i, 6).toString();
        switch(day6u){
            case "Working":
                addSaturday2.setSelected(true);
                break;
            case "No":
                addSaturday2.setSelected(false);
                break;
        }       
        String day7u = model.getValueAt(i, 7).toString();
        switch(day7u){
            case "Working":
                addSunday2.setSelected(true);
                break;
            case "No":
                addSunday2.setSelected(false);
                break;
        }
        
        //add hours
        int houru = Integer.parseInt(model.getValueAt(i, 8).toString());
        switch(houru){
            case 00:
                addHours2.setSelectedIndex(0);
                break;
            case 01:
                addHours2.setSelectedIndex(1);
                break;
            case 02:
                addHours2.setSelectedIndex(2);
                break;
            case 03:
                addHours2.setSelectedIndex(3);
                break;
            case 04:
                addHours2.setSelectedIndex(4);
                break;
            case 05:
                addHours2.setSelectedIndex(5);
                break;
            case 06:
                addHours2.setSelectedIndex(6);
                break;
            case 07:
                addHours2.setSelectedIndex(7);
                break;
            case 8:
                addHours2.setSelectedIndex(8);
                break;
            case 9:
                addHours2.setSelectedIndex(9);
                break;
            case 10:
                addHours2.setSelectedIndex(10);
                break;
            case 11:
                addHours2.setSelectedIndex(11);
                break;
            case 12:
                addHours2.setSelectedIndex(12);
                break;
        }
        
        //Add Minuits
        int minuitsu = Integer.parseInt(model.getValueAt(i, 9).toString());
        switch(minuitsu){
            case 00:
                addMinutes2.setSelectedIndex(0);
                break;
            case 05:
                addMinutes2.setSelectedIndex(1);
                break;
            case 10:
                addMinutes2.setSelectedIndex(2);
                break;
            case 15:
                addMinutes2.setSelectedIndex(3);
                break;
            case 20:
                addMinutes2.setSelectedIndex(4);
                break;
            case 25:
                addMinutes2.setSelectedIndex(5);
                break;
            case 30:
                addMinutes2.setSelectedIndex(6);
                break;
            case 35:
                addMinutes2.setSelectedIndex(7);
                break;
            case 40:
                addMinutes2.setSelectedIndex(8);
                break;
            case 45:
                addMinutes2.setSelectedIndex(9);
                break;
            case 50:
                addMinutes2.setSelectedIndex(10);
                break;
            case 55:
                addMinutes2.setSelectedIndex(11);
                break;
        }
        
        //total
        int total = Integer.parseInt(model.getValueAt(i, 10).toString());
        switch(total){
            case 00:
                addWd2.setSelectedIndex(0);
                break;
            case 01:
                addWd2.setSelectedIndex(1);
                break;
            case 02:
                addWd2.setSelectedIndex(2);
                break;
            case 03:
                addWd2.setSelectedIndex(3);
                break;
            case 04:
                addWd2.setSelectedIndex(4);
                break;
            case 05:
                addWd2.setSelectedIndex(5);
                break;
            case 06:
                addWd2.setSelectedIndex(6);
                break;
            case 07:
                addWd2.setSelectedIndex(7);
                break;
        }
        
        //month
        int monthr = Integer.parseInt(model.getValueAt(i, 11).toString());
        switch(monthr){
            case 00:
                addMonth2.setSelectedIndex(0);
                break;
            case 01:
                addMonth2.setSelectedIndex(1);
                break;
            case 02:
                addMonth2.setSelectedIndex(2);
                break;
            case 03:
                addMonth2.setSelectedIndex(3);
                break;
            case 04:
                addMonth2.setSelectedIndex(4);
                break;
            case 05:
                addMonth2.setSelectedIndex(5);
                break;
            case 06:
                addMonth2.setSelectedIndex(6);
                break;
            case 07:
                addMonth2.setSelectedIndex(7);
                break;
            case 8:
                addMonth2.setSelectedIndex(8);
                break;
            case 9:
                addMonth2.setSelectedIndex(9);
                break;
            case 10:
                addMonth2.setSelectedIndex(10);
                break;
            case 11:
                addMonth2.setSelectedIndex(11);
                break;
            case 12:
                addMonth2.setSelectedIndex(12);
                break;
        }
        
        // set weeks
        int weekr = Integer.parseInt(model.getValueAt(i, 12).toString());
        switch(weekr){
            case 00:
                addWeek2.setSelectedIndex(0);
                break;
            case 01:
                addWeek2.setSelectedIndex(1);
                break;
            case 02:
                addWeek2.setSelectedIndex(2);
                break;
            case 03:
                addWeek2.setSelectedIndex(3);
                break;
            case 04:
                addWeek2.setSelectedIndex(4);
                break;
            case 05:
                addWeek2.setSelectedIndex(5);
                break;
        }     
        
    }//GEN-LAST:event_workingDays_Detai_TablelMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Refresh Button:
        DefaultTableModel model = (DefaultTableModel)workingDays_Detai_Tablel.getModel();
        model.setRowCount(0);
        show_user();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        // Delete Button:
        try{
           
            //Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            //String url = "jdbc:sqlserver://localhost:1433;databaseName=jayamadhuka;user=sa;password=root";
            //Connection conn = DriverManager.getConnection(url);
            //Apache Connection
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
            int row = workingDays_Detai_Tablel.getSelectedRow();
            String value = (workingDays_Detai_Tablel.getModel().getValueAt(row, 0).toString());
            String dqery = "DELETE from workingdayshours where id="+value;
            PreparedStatement pstm = c.prepareStatement(dqery);
            pstm.executeUpdate();
            DefaultTableModel model = (DefaultTableModel)workingDays_Detai_Tablel.getModel();
            model.setRowCount(0);
            show_user();
            JOptionPane.showMessageDialog(null, "Record Deleted Successfully!");
            
            //Days Deletion
            
            Connection d = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
            
            String dqeryd = "DELETE from days where idwd="+value;
            PreparedStatement pstmtn = d.prepareStatement(dqeryd);
            pstmtn.executeUpdate();
            
            //Days Deletion Over
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deletebtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // RESET Button:
        matchingLable.setText("");
        errorNotation.setText("");
        idv.setText("ID");
        searchData.setText("     Enter ID Here");
        addMonth2.setSelectedIndex(0);
        addWeek2.setSelectedIndex(0);
        addWd2.setSelectedIndex(0);
        addMonday2.setSelected(false);
        addTuesday2.setSelected(false);
        addWednesday2.setSelected(false);
        addThursday2.setSelected(false);
        addFriday2.setSelected(false);
        addSaturday2.setSelected(false);
        addSunday2.setSelected(false);
        addHours2.setSelectedIndex(0);
        addMinutes2.setSelectedIndex(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // SEARCH Button:
        if(searchData.getText().trim().isEmpty()){
            errorNotation.setText("Doesn't Match Any Record!");
        }else if(searchData.getText().equals("     Enter ID Here")){
            errorNotation.setText("Searching Feild is Empty!");
        }else{
            errorNotation.setText("");
        }
        try{
           
//            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
//            String url = "jdbc:sqlserver://localhost:1433;databaseName=jayamadhuka;user=sa;password=root";
//            Connection conn = DriverManager.getConnection(url);
            Connection mk = DriverManager.getConnection("jdbc:mysql://localhost:3306/ltdmgdb?zeroDateTimeBehavior=convertToNull","root","");
            String rsql = "Select * from workingdayshours where id=?";
            PreparedStatement pstm = mk.prepareStatement(rsql);
            pstm.setString(1, searchData.getText());
            
            
            ResultSet rs = pstm.executeQuery();
            if(rs.next()){
                
                //id selection
                String setid = rs.getString("id");
                idv.setText(setid);
                
                // days selction
                String day1s = rs.getString("monDay");
                switch(day1s){
                    case "Working":
                        addMonday2.setSelected(true);
                        break;
                    case "No":
                        addMonday2.setSelected(false);
                        break;
                    }
                String day2s = rs.getString("tuesDay");
                switch(day2s){
                    case "Working":
                        addTuesday2.setSelected(true);
                        break;
                    case "No":
                        addTuesday2.setSelected(false);
                        break;
                    }
                String day3s = rs.getString("wednesDay");
                switch(day3s){
                    case "Working":
                        addWednesday2.setSelected(true);
                        break;
                    case "No":
                        addWednesday2.setSelected(false);
                        break;
                    }
                String day4s = rs.getString("thursDay");
                switch(day4s){
                    case "Working":
                        addThursday2.setSelected(true);
                        break;
                    case "No":
                        addThursday2.setSelected(false);
                        break;
                    }
                String day5s = rs.getString("friDay");
                switch(day5s){
                    case "Working":
                        addFriday2.setSelected(true);
                        break;
                    case "No":
                        addFriday2.setSelected(false);
                        break;
                    }
                String day6s = rs.getString("saturDay");
                switch(day6s){
                    case "Working":
                        addSaturday2.setSelected(true);
                        break;
                    case "No":
                        addSaturday2.setSelected(false);
                        break;
                    }
                String day7s = rs.getString("sunDay");
                switch(day7s){
                    case "Working":
                        addSunday2.setSelected(true);
                        break;
                    case "No":
                        addSunday2.setSelected(false);
                        break;
                    }
                
                //Add Hours
                int hours1 = Integer.parseInt(rs.getString("hours"));
                switch(hours1){
                    case 00:
                        addHours2.setSelectedIndex(0);
                        break;
                    case 01:
                        addHours2.setSelectedIndex(1);
                        break;
                    case 02:
                        addHours2.setSelectedIndex(2);
                        break;
                    case 03:
                        addHours2.setSelectedIndex(3);
                        break;
                    case 04:
                        addHours2.setSelectedIndex(4);
                        break;
                    case 05:
                        addHours2.setSelectedIndex(5);
                        break;
                    case 06:
                        addHours2.setSelectedIndex(6);
                        break;
                    case 07:
                        addHours2.setSelectedIndex(7);
                        break;
                    case 8:
                        addHours2.setSelectedIndex(8);
                        break;
                    case 9:
                        addHours2.setSelectedIndex(9);
                        break;
                    case 10:
                        addHours2.setSelectedIndex(10);
                        break;
                    case 11:
                        addHours2.setSelectedIndex(11);
                        break;
                    case 12:
                        addHours2.setSelectedIndex(12);
                        break;
                }
                //Add minuits
                int mins1 = Integer.parseInt(rs.getString("minuits"));
                switch(mins1){
                    case 00:
                        addMinutes2.setSelectedIndex(0);
                        break;
                    case 05:
                        addMinutes2.setSelectedIndex(1);
                        break;
                    case 10:
                        addMinutes2.setSelectedIndex(2);
                        break;
                    case 15:
                        addMinutes2.setSelectedIndex(3);
                        break;
                    case 20:
                        addMinutes2.setSelectedIndex(4);
                        break;
                    case 25:
                        addMinutes2.setSelectedIndex(5);
                        break;
                    case 30:
                        addMinutes2.setSelectedIndex(6);
                        break;
                    case 35:
                        addMinutes2.setSelectedIndex(7);
                        break;
                    case 40:
                        addMinutes2.setSelectedIndex(8);
                        break;
                    case 45:
                        addMinutes2.setSelectedIndex(9);
                        break;
                    case 50:
                        addMinutes2.setSelectedIndex(10);
                        break;
                    case 55:
                        addMinutes2.setSelectedIndex(11);
                        break;
                }
                //Add total
                int totDay1 = Integer.parseInt(rs.getString("totDay"));
                switch(totDay1){
                    case 00:
                        addWd2.setSelectedIndex(0);
                        break;
                    case 01:
                        addWd2.setSelectedIndex(1);
                        break;
                    case 02:
                        addWd2.setSelectedIndex(2);
                        break;
                    case 03:
                        addWd2.setSelectedIndex(3);
                        break;
                    case 04:
                        addWd2.setSelectedIndex(4);
                        break;
                    case 05:
                        addWd2.setSelectedIndex(5);
                        break;
                    case 06:
                        addWd2.setSelectedIndex(6);
                        break;
                    case 07:
                        addWd2.setSelectedIndex(7);
                        break;
                }
                //Add month
                int month1 = Integer.parseInt(rs.getString("month"));
                switch(month1){
                    case 00:
                        addMonth2.setSelectedIndex(0);
                        break;
                    case 01:
                        addMonth2.setSelectedIndex(1);
                        break;
                    case 02:
                        addMonth2.setSelectedIndex(2);
                        break;
                    case 03:
                        addMonth2.setSelectedIndex(3);
                        break;
                    case 04:
                        addMonth2.setSelectedIndex(4);
                        break;
                    case 05:
                        addMonth2.setSelectedIndex(5);
                        break;
                    case 06:
                        addMonth2.setSelectedIndex(6);
                        break;
                    case 07:
                        addMonth2.setSelectedIndex(7);
                        break;
                    case 8:
                        addMonth2.setSelectedIndex(8);
                        break;
                    case 9:
                        addMonth2.setSelectedIndex(9);
                        break;
                    case 10:
                        addMonth2.setSelectedIndex(10);
                        break;
                    case 11:
                        addMonth2.setSelectedIndex(11);
                        break;
                    case 12:
                        addMonth2.setSelectedIndex(12);
                        break;
                }
                
                //Add Week
                int week1 = Integer.parseInt(rs.getString("week"));
                switch(week1){
                    case 00:
                        addWeek2.setSelectedIndex(0);
                        break;
                    case 01:
                        addWeek2.setSelectedIndex(1);
                        break;
                    case 02:
                        addWeek2.setSelectedIndex(2);
                        break;
                    case 03:
                        addWeek2.setSelectedIndex(3);
                        break;
                    case 04:
                        addWeek2.setSelectedIndex(4);
                        break;
                    case 05:
                        addWeek2.setSelectedIndex(5);
                        break;
                }
                
            }else{
                errorNotation.setText("Doesn't Match Any Record!");
            }
            
        }catch(Exception e){
            errorNotation.setText("Doesn't Match Any Record!");
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void searchDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchDataActionPerformed

    private void searchDataFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchDataFocusGained
        // Text Hint:
        if(searchData.getText().equals("     Enter ID Here")){
            searchData.setText("");
            searchData.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_searchDataFocusGained

    private void searchDataFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchDataFocusLost
        // Hint Lost:
        if(searchData.getText().equals("")){
            searchData.setText("     Enter ID Here");
            searchData.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_searchDataFocusLost

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // Dash Board:
        if(evt.getActionCommand().equals("Dash Board")){
            System.out.println("Return Dash Board");
        }
        close();
        Member3_Dash_Board wd = new Member3_Dash_Board();
        wd.setVisible(true);
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewWorkingDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewWorkingDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewWorkingDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewWorkingDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewWorkingDetail().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addFriday2;
    private javax.swing.JComboBox<String> addHours2;
    private javax.swing.JComboBox<String> addMinutes2;
    private javax.swing.JCheckBox addMonday2;
    private javax.swing.JComboBox<String> addMonth2;
    private javax.swing.JCheckBox addSaturday2;
    private javax.swing.JCheckBox addSunday2;
    private javax.swing.JCheckBox addThursday2;
    private javax.swing.JCheckBox addTuesday2;
    private javax.swing.JComboBox<String> addWd2;
    private javax.swing.JCheckBox addWednesday2;
    private javax.swing.JComboBox<String> addWeek2;
    private javax.swing.JButton deletebtn;
    private javax.swing.JLabel errorNotation;
    private javax.swing.JLabel idv;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel matchingLable;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchData;
    private javax.swing.JTable workingDays_Detai_Tablel;
    // End of variables declaration//GEN-END:variables
}
